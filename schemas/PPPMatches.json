{
  "title": "PPPMatches",
  "description": "The results of a PPPM algorithm run on an EMImage.",
  "type": "object",
  "properties": {
    "maskId": {
      "title": "Maskid",
      "description": "Unique identifier of the target image.",
      "type": "string"
    },
    "maskPublishedName": {
      "title": "Maskpublishedname",
      "description": "Published name for the contents of the target image.",
      "type": "string"
    },
    "maskLibraryName": {
      "title": "Masklibraryname",
      "description": "Name of the image library containing the target image.",
      "type": "string"
    },
    "neuronType": {
      "title": "Neurontype",
      "description": "Neuron type name from neuPrint",
      "type": "string"
    },
    "neuronInstance": {
      "title": "Neuroninstance",
      "description": "Neuron instance name from neuPrint",
      "type": "string"
    },
    "results": {
      "title": "Results",
      "description": "List of PPPM matches.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PPPMatch"
      }
    }
  },
  "required": [
    "maskId",
    "maskPublishedName",
    "maskLibraryName",
    "neuronType",
    "neuronInstance",
    "results"
  ],
  "definitions": {
    "Files": {
      "title": "Files",
      "description": "Files associated with a NeuronImage or Match.",
      "type": "object",
      "properties": {
        "ColorDepthMip": {
          "title": "Colordepthmip",
          "description": "PPPM-only. Relative path to the CDM of the best matching channel of the matching LM stack. 'LM - Best Channel CDM' in the NeuronBridge GUI.",
          "type": "string"
        },
        "ColorDepthMipSkel": {
          "title": "Colordepthmipskel",
          "description": "PPPM-only. Relative path to CDM of the best matching channel with the matching LM segmentation fragments overlaid. 'LM - Best Channel CDM with EM overlay' in the NeuronBridge GUI.",
          "type": "string"
        },
        "SignalMip": {
          "title": "Signalmip",
          "description": "PPPM-only. Relative path to the full MIP of all channels of the matching sample. 'LM - Sample All-Channel CDM' in the NeuronBridge GUI.",
          "type": "string"
        },
        "SignalMipMasked": {
          "title": "Signalmipmasked",
          "description": "PPPM-only. Relative path to an image showing LM signal content masked with the matching LM segmentation fragments. 'PPP Mask' in the NeuronBridge GUI.",
          "type": "string"
        },
        "SignalMipMaskedSkel": {
          "title": "Signalmipmaskedskel",
          "description": "PPPM-only. Relative path an image showing LM signal content masked with the matching LM segmentation fragments, overlaid with the EM skeelton. 'PPP Mask with EM Overlay' in the NeuronBridge GUI.",
          "type": "string"
        }
      },
      "required": [
        "ColorDepthMip",
        "ColorDepthMipSkel",
        "SignalMip",
        "SignalMipMasked",
        "SignalMipMaskedSkel"
      ]
    },
    "PPPMatch": {
      "title": "PPPMatch",
      "description": "A PPPMatch is a match generated by the PPPM algorithm between an EMImage and a LMImage.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "Unique identifier of the matching image.",
          "type": "string"
        },
        "publishedName": {
          "title": "Publishedname",
          "description": "Published name for the contents of the matching image.",
          "type": "string"
        },
        "libraryName": {
          "title": "Libraryname",
          "description": "Name of the image library containing the matching image.",
          "type": "string"
        },
        "alignmentSpace": {
          "title": "Alignmentspace",
          "description": "Alignment space to which the matching image was registered.",
          "type": "string"
        },
        "gender": {
          "title": "Gender",
          "description": "Gender of the sample represented in the matching image.",
          "type": "string"
        },
        "imageStack": {
          "title": "Imagestack",
          "description": "URL of the full LM image stack of the matching image.",
          "type": "string"
        },
        "mirrored": {
          "title": "Mirrored",
          "description": "Indicates whether the target image was found within a mirrored version of the matching image.",
          "type": "boolean"
        },
        "pppRank": {
          "title": "Ppprank",
          "description": "Fractional rank reported by the PPPM algorithm. It's generally better to use the index of the image in the results.",
          "type": "number"
        },
        "pppScore": {
          "title": "Pppscore",
          "description": "Match score reported by the PPPM algorithm.",
          "type": "integer"
        },
        "slideCode": {
          "title": "Slidecode",
          "description": "Unique identifier for the sample that was imaged.",
          "type": "string"
        },
        "objective": {
          "title": "Objective",
          "description": "Magnification of the microscope objective used to imaged this image.",
          "type": "string"
        },
        "mountingProtocol": {
          "title": "Mountingprotocol",
          "description": "Description of the protocol used to mount the sample for imaging.",
          "type": "string"
        },
        "files": {
          "title": "Files",
          "description": "Files characterizing the match.",
          "allOf": [
            {
              "$ref": "#/definitions/Files"
            }
          ]
        },
        "maskLibraryName": {
          "title": "Masklibraryname",
          "description": "This is just a hack to get around the fact that PPP imagery is stored under the mask library name.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "publishedName",
        "libraryName",
        "alignmentSpace",
        "gender",
        "mirrored",
        "pppRank",
        "pppScore",
        "slideCode",
        "objective",
        "mountingProtocol",
        "files"
      ]
    }
  }
}
